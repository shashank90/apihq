export const userData = [
  {
    name: "Jan",
    "Active User": 4000,
  },
  {
    name: "Feb",
    "Active User": 3000,
  },
  {
    name: "Mar",
    "Active User": 5000,
  },
  {
    name: "Apr",
    "Active User": 4000,
  },
  {
    name: "May",
    "Active User": 3000,
  },
  {
    name: "Jun",
    "Active User": 2000,
  },
  {
    name: "Jul",
    "Active User": 4000,
  },
  {
    name: "Agu",
    "Active User": 3000,
  },
  {
    name: "Sep",
    "Active User": 4000,
  },
  {
    name: "Oct",
    "Active User": 1000,
  },
  {
    name: "Nov",
    "Active User": 4000,
  },
  {
    name: "Dec",
    "Active User": 3000,
  },
];

export const TargetData = [
  {
    name: "Jan",
    Sales: 4000,
  },
  {
    name: "Feb",
    Sales: 3000,
  },
  {
    name: "Mar",
    Sales: 5000,
  },
];

export const userTests = [
  {
    id: "owasp-1",
    name: "Broken Object Level Authorization",
    linkName: "bola",
    description:
      "Attackers substitute the ID of their own resource in the API call with an ID of a resource belonging to another user. The lack of proper authorization checks allows attackers to access the specified resource. This attack is also known as IDOR (Insecure Direct Object Reference).",
    enabled: "true",
    objectives: ["Confidentiality"],
    tags: [],
  },
  {
    id: "owasp-2",
    name: "Broken Function Level Authorization",
    linkName: "bofa",
    description:
      "The API relies on the client to use user level or admin level APIs as appropriate. Attackers figure out the “hidden” admin API methods and invoke them directly.",
    enabled: "true",
    objectives: ["Authorization"],
    tags: [],
  },
  {
    id: "owasp-3",
    name: "Excessive data exposure",
    linkName: "over-exposure",
    description:
      "The API may expose a lot more data than what the client legitimately needs, relying on the client to do the filtering. If attackers go directly to the API, they have it all.",
    enabled: "true",
    objectives: ["Confidentiality"],
    tags: [],
  },
  {
    id: "owasp-4",
    name: "Mass Assignment",
    linkName: "mass-assignment",
    description:
      "The API takes data that client provides and stores it without proper filtering for whitelisted properties. ",
    enabled: "true",
    objectives: ["Integrity"],
    tags: [],
  },
  {
    id: "owasp-5",
    name: "Resource limit review",
    linkName: "resource-limit",
    description:
      "The API is not protected against an excessive amount of calls or payload sizes. Attackers can use this for Denial of Service (DoS) and authentication flaws like brute force attacks.",
    enabled: "true",
    objectives: ["Availability"],
    tags: [],
  },
  {
    id: "owasp-6",
    name: "Sensitive data exposure",
    linkName: "sensitive-data",
    description: "Look for sensitive data leakage in API responses and logs",
    enabled: "true",
    objectives: ["Confidentiality, Auditing"],
    tags: [],
  },
];
export const vulns = [
  {
    id: 1,
    pluginid: "3",
    alertRef: "3",
    alert: "Session ID in URL Rewrite",
    name: "Session ID in URL Rewrite",
    riskcode: "2",
    confidence: "3",
    riskdesc: "Medium (High)",
    desc: "<p>URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.</p>",
    instances: [
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWpFw&sid=PGvcFrgfUifYmDWHAACc",
        method: "POST",
        param: "sid",
        evidence: "PGvcFrgfUifYmDWHAACc",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=e-AC7qnSFaFxunxJAACC",
        method: "GET",
        param: "sid",
        evidence: "e-AC7qnSFaFxunxJAACC",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=fpbqFOr8p4jq_PWuAACy",
        method: "GET",
        param: "sid",
        evidence: "fpbqFOr8p4jq_PWuAACy",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUTF4Y&sid=-DxH6V_YqqK7_TVxAABI",
        method: "POST",
        param: "sid",
        evidence: "-DxH6V_YqqK7_TVxAABI",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWicA&sid=uE0apHoK3twfxmSNAACa",
        method: "GET",
        param: "sid",
        evidence: "uE0apHoK3twfxmSNAACa",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWBDq&sid=81oIUeVP_sqR61i8AACO",
        method: "GET",
        param: "sid",
        evidence: "81oIUeVP_sqR61i8AACO",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWB9q&sid=81oIUeVP_sqR61i8AACO",
        method: "GET",
        param: "sid",
        evidence: "81oIUeVP_sqR61i8AACO",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUY4L6&sid=OaftdqYyU2XULyzMAAC4",
        method: "POST",
        param: "sid",
        evidence: "OaftdqYyU2XULyzMAAC4",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVfPk&sid=e-AC7qnSFaFxunxJAACC",
        method: "POST",
        param: "sid",
        evidence: "e-AC7qnSFaFxunxJAACC",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlKkrNj&sid=Nr19uqK460O4INZqAAAA",
        method: "POST",
        param: "sid",
        evidence: "Nr19uqK460O4INZqAAAA",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=VdbH8wSaviBhVFfyAABA",
        method: "GET",
        param: "sid",
        evidence: "VdbH8wSaviBhVFfyAABA",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=J-wJ-5FI2P_bQXmbAACk",
        method: "GET",
        param: "sid",
        evidence: "J-wJ-5FI2P_bQXmbAACk",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXSPg&sid=IXhEKDTB_02_LGrQAACq",
        method: "GET",
        param: "sid",
        evidence: "IXhEKDTB_02_LGrQAACq",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=6JGlNISR3SWPJWVaAABq",
        method: "GET",
        param: "sid",
        evidence: "6JGlNISR3SWPJWVaAABq",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUSGlu&sid=awTx9cvNb05xabfPAAAu",
        method: "GET",
        param: "sid",
        evidence: "awTx9cvNb05xabfPAAAu",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUULuX&sid=lc6ROxoJwVOOutF6AABe",
        method: "GET",
        param: "sid",
        evidence: "lc6ROxoJwVOOutF6AABe",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=4m14ShaY8ZpAWxWlAACo",
        method: "GET",
        param: "sid",
        evidence: "4m14ShaY8ZpAWxWlAACo",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=websocket&sid=Q411QOoG0hPZn-TYAACE",
        method: "GET",
        param: "sid",
        evidence: "Q411QOoG0hPZn-TYAACE",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlURk5k&sid=3kICe9kw7FbN3g_FAAAg",
        method: "GET",
        param: "sid",
        evidence: "3kICe9kw7FbN3g_FAAAg",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUSKuh&sid=M5QMbWdxvJ-0gpyfAAAw",
        method: "GET",
        param: "sid",
        evidence: "M5QMbWdxvJ-0gpyfAAAw",
      },
    ],
    count: "320",
    solution:
      "<p>For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.</p>",
    reference:
      "<p>http://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 2,
    pluginid: "10021",
    alertRef: "10021",
    alert: "X-Content-Type-Options Header Missing",
    name: "X-Content-Type-Options Header Missing",
    riskcode: "1",
    confidence: "2",
    riskdesc: "Low (Medium)",
    desc: "<p>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</p>",
    instances: [
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUTYvk&sid=3AcIqJu90lADITHtAABQ",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlURptu",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUUosA",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWtho&sid=HHUE-HQcqDItWgh3AACe",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT7aQ&sid=ECVxKGLX25RJa2K2AABG",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXAHb",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWUt2&sid=zeGSDvFRDaF9XKLWAACW",
        method: "POST",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVVL2&sid=tq1TrNXUezGYkMYFAAB-",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVfPk&sid=e-AC7qnSFaFxunxJAACC",
        method: "POST",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXv2O&sid=lLXWjvoQkBHVkxo5AAC0",
        method: "POST",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVuTU",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT_Kz&sid=tYzi7EQ-AfQrbes5AABW",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXHnj&sid=AXdVAjAeUObszhw6AACm",
        method: "POST",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVuM0&sid=xNiAzTzl_49oiZ3KAACG",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUW4VQ&sid=su-P8cRO8xkxKDLBAACM",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUSGep&sid=awTx9cvNb05xabfPAAAu",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUV-gh&sid=tRmKxtCQSsUJBFS7AACK",
        method: "POST",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWI-W&sid=8RI2RR661TxNi7E8AACS",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUTYli&sid=3AcIqJu90lADITHtAABQ",
        method: "GET",
        param: "X-Content-Type-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT1nt&sid=j05kYU1pKsvZaLn2AABE",
        method: "GET",
        param: "X-Content-Type-Options",
      },
    ],
    count: "320",
    solution:
      "<p>Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.</p>",
    otherinfo:
      '<p>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.</p><p>At "High" threshold this scan rule will not alert on client or server error responses.</p>',
    reference:
      "<p>http://msdn.microsoft.com/en-us/library/ie/gg622941%28v=vs.85%29.aspx</p><p>https://owasp.org/www-community/Security_Headers</p>",
    cweid: "693",
    wascid: "15",
    sourceid: "3",
  },
  {
    id: 3,
    pluginid: "10098",
    alertRef: "10098",
    alert: "Cross-Domain Misconfiguration",
    name: "Cross-Domain Misconfiguration",
    riskcode: "2",
    confidence: "2",
    riskdesc: "Medium (Medium)",
    desc: "<p>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server</p>",
    instances: [
      {
        uri: "http://localhost:3000/assets/public/images/uploads/magn(et)ificent!-1571814229653.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/products/permafrost.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/products/fruit_press.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/carousel/4.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/rest/continue-code",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/th.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/ftp/legal.md",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/api/Quantitys/",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/tn.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/dk.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/carousel/3.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/jp.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/MaterialIcons-Regular.woff2",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/hk.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/main-es2018.js",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/uploads/my-rare-collectors-item!-%5B%CC%B2%CC%85$%CC%B2%CC%85(%CC%B2%CC%85-%CD%A1%C2%B0-%CD%9C%CA%96-%CD%A1%C2%B0%CC%B2%CC%85)%CC%B2%CC%85$%CC%B2%CC%85%5D-1572603645543.jpg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/favicon_js.ico",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/assets/public/images/carousel/5.png",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
      {
        uri: "http://localhost:3000/id.svg",
        method: "GET",
        evidence: "Access-Control-Allow-Origin: *",
      },
    ],
    count: "93",
    solution:
      '<p>Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).</p><p>Configure the "Access-Control-Allow-Origin" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.</p>',
    otherinfo:
      "<p>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</p>",
    reference:
      "<p>http://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html</p>",
    cweid: "264",
    wascid: "14",
    sourceid: "3",
  },
  {
    id: 4,
    pluginid: "10020",
    alertRef: "10020",
    alert: "X-Frame-Options Header Not Set",
    name: "X-Frame-Options Header Not Set",
    riskcode: "2",
    confidence: "2",
    riskdesc: "Medium (Medium)",
    desc: "<p>X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.</p>",
    instances: [
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUS_9W&sid=l8xnIlt56Vw0UhAsAABC",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXfui&sid=HlET6H1v8cOw_KM6AACu",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT7PP&sid=ECVxKGLX25RJa2K2AABG",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT1nq&sid=j05kYU1pKsvZaLn2AABE",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUSGem&sid=awTx9cvNb05xabfPAAAu",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVDzI&sid=VPke0auZrx4vCWVaAAB0",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVRrZ&sid=B5dJSpQ_wD7WHa_gAAB8",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUUwYB&sid=6DBgPNIRETQp-cw_AABu",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlKkrNj&sid=Nr19uqK460O4INZqAAAA",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUSTDc&sid=YhPSCBBabgEoILY5AAA0",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUT_Ha&sid=tYzi7EQ-AfQrbes5AABW",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUX_Dt&sid=g8VU2xQgCG-Mkj8LAAC2",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUUZPY&sid=Y3SoDKKRnBZBWpxBAABm",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlURmqA&sid=89d3yk4n0RWx901eAAAk",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUTlIs&sid=zepyviiPquIis3dSAABS",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUWxXS&sid=haj1sj4OhkfvTuCFAACg",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUXNx9&sid=4m14ShaY8ZpAWxWlAACo",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUX37g&sid=21REfi4MwaEkI4t1AACi",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUTYlb&sid=3AcIqJu90lADITHtAABQ",
        method: "POST",
        param: "X-Frame-Options",
      },
      {
        uri: "http://localhost:3000/socket.io/?EIO=4&transport=polling&t=NlUVVKu&sid=tq1TrNXUezGYkMYFAAB-",
        method: "POST",
        param: "X-Frame-Options",
      },
    ],
    count: "80",
    solution:
      "<p>Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive. </p>",
    reference:
      "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options</p>",
    cweid: "1021",
    wascid: "15",
    sourceid: "3",
  },
  {
    id: 5,
    pluginid: "10096",
    alertRef: "10096",
    alert: "Timestamp Disclosure - Unix",
    name: "Timestamp Disclosure - Unix",
    riskcode: "0",
    confidence: "1",
    riskdesc: "Informational (Low)",
    desc: "<p>A timestamp was disclosed by the application/web server - Unix</p>",
    instances: [
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "1803700518",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "0000000005",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "179464974",
      },
      {
        uri: "http://localhost:3000/rest/admin/application-configuration",
        method: "GET",
        evidence: "1970691216",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "1801949248",
      },
      {
        uri: "http://localhost:3000/rest/admin/application-configuration",
        method: "GET",
        evidence: "771984076",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "1801948466",
      },
      {
        uri: "http://localhost:3000/rest/products/search?q=",
        method: "GET",
        evidence: "1970691216",
      },
      {
        uri: "http://localhost:3000/tutorial-es2018.js",
        method: "GET",
        evidence: "771984076",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "0000039834",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "0000051215",
      },
      {
        uri: "http://localhost:3000/rest/products/search?q=",
        method: "GET",
        evidence: "1969196030",
      },
      {
        uri: "http://localhost:3000/rest/admin/application-configuration",
        method: "GET",
        evidence: "1969196030",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "0000000004",
      },
    ],
    count: "14",
    solution:
      "<p>Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.</p>",
    otherinfo: "<p>1803700518, which evaluates to: 2027-02-26 22:55:18</p>",
    reference:
      "<p>http://projects.webappsec.org/w/page/13246936/Information%20Leakage</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 6,
    pluginid: "10017",
    alertRef: "10017",
    alert: "Cross-Domain JavaScript Source File Inclusion",
    name: "Cross-Domain JavaScript Source File Inclusion",
    riskcode: "1",
    confidence: "2",
    riskdesc: "Low (Medium)",
    desc: "<p>The page includes one or more script files from a third-party domain.</p>",
    instances: [
      {
        uri: "http://localhost:3000/assets/public/images/uploads/%F0%9F%98%BC-",
        method: "GET",
        param:
          "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>',
      },
      {
        uri: "http://localhost:3000",
        method: "GET",
        param: "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>',
      },
      {
        uri: "http://localhost:3000/",
        method: "GET",
        param:
          "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>',
      },
      {
        uri: "http://localhost:3000/",
        method: "GET",
        param: "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>',
      },
      {
        uri: "http://localhost:3000",
        method: "GET",
        param:
          "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>',
      },
      {
        uri: "http://localhost:3000/assets/public/images/uploads/%F0%9F%98%BC-",
        method: "GET",
        param: "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
        evidence:
          '<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>',
      },
    ],
    count: "6",
    solution:
      "<p>Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.</p>",
    reference: "<p></p>",
    cweid: "829",
    wascid: "15",
    sourceid: "3",
  },
  {
    id: 7,
    pluginid: "10027",
    alertRef: "10027",
    alert: "Information Disclosure - Suspicious Comments",
    name: "Information Disclosure - Suspicious Comments",
    riskcode: "0",
    confidence: "1",
    riskdesc: "Informational (Low)",
    desc: "<p>The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.</p>",
    instances: [
      {
        uri: "http://localhost:3000/polyfills-es2018.js",
        method: "GET",
        evidence: "select",
      },
      {
        uri: "http://localhost:3000/vendor-es2018.js",
        method: "GET",
        evidence: "query",
      },
      {
        uri: "http://localhost:3000/main-es2018.js",
        method: "GET",
        evidence: "query",
      },
      {
        uri: "http://localhost:3000/tutorial-es2018.js",
        method: "GET",
        evidence: "query",
      },
    ],
    count: "4",
    solution:
      "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
    otherinfo:
      '<p>The following pattern was used: \\bSELECT\\b and was detected in the element starting with: "(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"+edc":function(t,e,n){var r=n("sU/p");t.exports=function(t,e,n){for(va", see evidence field for the suspicious comment/snippet.</p>',
    reference: "<p></p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 9,
    pluginid: "2",
    alertRef: "2",
    alert: "Private IP Disclosure",
    name: "Private IP Disclosure",
    riskcode: "1",
    confidence: "2",
    riskdesc: "Low (Medium)",
    desc: "<p>A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.</p>",
    instances: [
      {
        uri: "http://localhost:3000/rest/admin/application-configuration",
        method: "GET",
        evidence: "192.168.99.100:3000",
      },
    ],
    count: "1",
    solution:
      "<p>Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.</p>",
    otherinfo: "<p>192.168.99.100:3000</p><p></p>",
    reference: "<p>https://tools.ietf.org/html/rfc1918</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 10,
    pluginid: "2",
    alertRef: "2",
    alert: "Broken Object Level Authorization",
    name: "Broken Object Level Authorization",
    riskcode: "1",
    confidence: "1",
    riskdesc: "High",
    desc: "Incomplete access control to resource",
    instances: [
      {
        uri: "http://test.cymitra.com/appsechq/john/checkout?cart_id=8888",
        method: "GET",
        evidence: "192.168.99.100:3000",
      },
    ],
    count: "1",
    solution: "Add authorization checks before allowing access to objects",
    otherinfo: "<p>192.168.99.100:3000</p><p></p>",
    reference: "<p>https://tools.ietf.org/html/rfc1918</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 11,
    pluginid: "2",
    alertRef: "2",
    alert: "Excessive data exposure",
    name: "Excessive data exposure",
    riskcode: "1",
    confidence: "1",
    riskdesc: "High",
    desc: "More information than required is visible in API response",
    instances: [
      {
        uri: "http://test.cymitra.com/appsechq/john/payment/gateway_id=223",
        method: "POST",
        evidence: "mobileNumber",
      },
    ],
    count: "1",
    solution: "Remove unwanted attributes from API response",
    otherinfo: "<p>192.168.99.100:3000</p><p></p>",
    reference: "<p>https://tools.ietf.org/html/rfc1918</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
  {
    id: 12,
    pluginid: "2",
    alertRef: "2",
    alert: "Mass Assigment",
    name: "Mass Assignment",
    riskcode: "1",
    confidence: "1",
    riskdesc: "High",
    desc: "Attacker can guess and supply additional attributes in POST payload",
    instances: [
      {
        uri: "http://test.cymitra.com/appsechq/john/payment/gateway_id=223",
        method: "POST",
        evidence: "{....cvv:1235}",
      },
    ],
    count: "1",
    solution: "Make attributes not meant for exposure to read-only",
    otherinfo: "<p>192.168.99.100:3000</p><p></p>",
    reference: "<p>https://tools.ietf.org/html/rfc1918</p>",
    cweid: "200",
    wascid: "13",
    sourceid: "3",
  },
];

export const targetSummary = [
  {
    id: 1,
    targetName: "test-cymitra",
    targetSite: "http://test.cymitra.com",
    totalVulns: 9,
    openVulns: 8,
    closedVulns: 1,
    criticalVulns: 2,
    highVulns: 3,
    scanStatus: "Running",
  },
  {
    id: 2,
    targetName: "onboarding-cymitra",
    targetSite: "http://onboarding.cymitra.com",
    totalVulns: 8,
    openVulns: 6,
    closedVulns: 2,
    criticalVulns: 1,
    highVulns: 2,
    scanStatus: "Read to Run",
  },
  {
    id: 3,
    targetName: "manage-cymitra",
    targetSite: "http://manage.cymitra.com",
    totalVulns: 8,
    openVulns: 5,
    closedVulns: 3,
    criticalVulns: 3,
    highVulns: 4,
    scanStatus: "Ready to Run",
  },
];
export const targetList = [
  {
    id: 1,
    site: "test.cymitra.com",
    lastRun: "Nov 22 2021 01:25:50",
    testStatus: "idle",
  },
  {
    id: 2,
    site: "onboarding.cymitra.com",
    lastRun: "Nov 25 2021 02:25:50",
    testStatus: "idle",
  },
  {
    id: 3,
    site: "manage.cymitra.com",
    lastRun: "Nov 24 2021 03:25:50",
    testStatus: "idle",
  },
];
export const builtinTests = [
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "22",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Path Traversal",
    wascId: "33",
    id: "6",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "98",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Remote File Inclusion",
    wascId: "5",
    id: "7",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "541",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Source Code Disclosure - /WEB-INF folder",
    wascId: "34",
    id: "10045",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "601",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "External Redirect",
    wascId: "38",
    id: "20019",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "97",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Server Side Include",
    wascId: "31",
    id: "40009",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "79",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross Site Scripting (Reflected)",
    wascId: "8",
    id: "40012",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "79",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross Site Scripting (Persistent)",
    wascId: "8",
    id: "40014",
    enabled: "true",
    quality: "release",
    dependencies: ["40017"],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection",
    wascId: "19",
    id: "40018",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "94",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Server Side Code Injection",
    wascId: "20",
    id: "90019",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "78",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Remote OS Command Injection",
    wascId: "31",
    id: "90020",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "548",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Directory Browsing",
    wascId: "48",
    id: "0",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "120",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Buffer Overflow",
    wascId: "7",
    id: "30001",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "134",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Format String Error",
    wascId: "6",
    id: "30002",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "113",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "CRLF Injection",
    wascId: "25",
    id: "40003",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "472",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Parameter Tampering",
    wascId: "20",
    id: "40008",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "215",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "ELMAH Information Leak",
    wascId: "13",
    id: "40028",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "215",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: ".htaccess Information Leak",
    wascId: "13",
    id: "40032",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "79",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross Site Scripting (Persistent) - Prime",
    wascId: "8",
    id: "40016",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "79",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross Site Scripting (Persistent) - Spider",
    wascId: "8",
    id: "40017",
    enabled: "true",
    quality: "release",
    dependencies: ["40016"],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Script Active Scan Rules",
    wascId: "0",
    id: "50000",
    enabled: "true",
    quality: "release",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "541",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Source Code Disclosure - Git ",
    wascId: "34",
    id: "41",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "541",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Source Code Disclosure - File Inclusion",
    wascId: "33",
    id: "43",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "78",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Remote Code Execution - Shell Shock",
    wascId: "31",
    id: "10048",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "20",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Httpoxy - Proxy Header Misuse",
    wascId: "20",
    id: "10107",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "352",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Anti-CSRF Tokens Check",
    wascId: "9",
    id: "20012",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "119",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Heartbleed OpenSSL Vulnerability",
    wascId: "20",
    id: "20015",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "264",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross-Domain Misconfiguration",
    wascId: "14",
    id: "20016",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "20",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Source Code Disclosure - CVE-2012-1823",
    wascId: "20",
    id: "20017",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "20",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Remote Code Execution - CVE-2012-1823",
    wascId: "20",
    id: "20018",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "384",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Session Fixation",
    wascId: "37",
    id: "40013",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - MySQL",
    wascId: "19",
    id: "40019",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - Hypersonic SQL",
    wascId: "19",
    id: "40020",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - Oracle",
    wascId: "19",
    id: "40021",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - PostgreSQL",
    wascId: "19",
    id: "40022",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - SQLite",
    wascId: "19",
    id: "40024",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "1",
    cweId: "79",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cross Site Scripting (DOM Based)",
    wascId: "8",
    id: "40026",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SQL Injection - MsSQL",
    wascId: "19",
    id: "40027",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "89",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Advanced SQL Injection",
    wascId: "19",
    id: "90018",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "643",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "XPath Injection",
    wascId: "39",
    id: "90021",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "611",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "XML External Entity Attack",
    wascId: "43",
    id: "90023",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "209",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Generic Padding Oracle",
    wascId: "20",
    id: "90024",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "917",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Expression Language Injection",
    wascId: "20",
    id: "90025",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cloud Metadata Potentially Exposed",
    wascId: "0",
    id: "90034",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "541",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Source Code Disclosure - SVN",
    wascId: "34",
    id: "42",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "20",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Relative Path Confusion",
    wascId: "20",
    id: "10051",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "530",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Backup File Disclosure",
    wascId: "34",
    id: "10095",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "311",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "HTTP Only Site",
    wascId: "4",
    id: "10106",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "190",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Integer Overflow Error",
    wascId: "3",
    id: "30003",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "200",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Proxy Disclosure",
    wascId: "45",
    id: "40025",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "215",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Trace.axd Information Leak",
    wascId: "13",
    id: "40029",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "215",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: ".env Information Leak",
    wascId: "13",
    id: "40034",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "538",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Hidden File Finder",
    wascId: "13",
    id: "40035",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "91",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "XSLT Injection",
    wascId: "23",
    id: "90017",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "200",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Insecure HTTP Method",
    wascId: "45",
    id: "90028",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "311",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "HTTPS Content Available via HTTP",
    wascId: "4",
    id: "10047",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "16",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "GET for POST",
    wascId: "20",
    id: "10058",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "User Agent Fuzzer",
    wascId: "0",
    id: "10104",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "20",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "HTTP Parameter Pollution",
    wascId: "20",
    id: "20014",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "200",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Possible Username Enumeration",
    wascId: "13",
    id: "40023",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "0",
    cweId: "200",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Cookie Slack Detector",
    wascId: "45",
    id: "90027",
    enabled: "true",
    quality: "beta",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "90",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "LDAP Injection",
    wascId: "29",
    id: "40015",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "4",
    cweId: "943",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "NoSQL Injection - MongoDB",
    wascId: "19",
    id: "40033",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Example Active Scan Rule: Denial of Service",
    wascId: "0",
    id: "60100",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "An example active scan rule which loads data from a file",
    wascId: "0",
    id: "60101",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SOAP Action Spoofing",
    wascId: "0",
    id: "90026",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "SOAP XML Injection",
    wascId: "0",
    id: "90029",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "JWT Scan Rule",
    wascId: "0",
    id: "40036",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Bypassing 403",
    wascId: "0",
    id: "40038",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "3",
    cweId: "0",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "Web Cache Deception",
    wascId: "0",
    id: "40039",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
  {
    allDependenciesAvailable: "true",
    policyId: "2",
    cweId: "942",
    attackStrength: "DEFAULT",
    alertThreshold: "DEFAULT",
    name: "CORS Header",
    wascId: "14",
    id: "40040",
    enabled: "true",
    quality: "alpha",
    dependencies: [],
  },
];
export const vulnDetails = [
  {
    sourceid: "3",
    other: "",
    method: "GET",
    evidence: "max-age=0",
    pluginId: "10049",
    cweid: "524",
    confidence: "Medium",
    wascid: "13",
    description:
      "The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users. ",
    messageId: "1",
    url: "http://localhost:3000/",
    reference:
      "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)",
    solution: "",
    alert: "Storable but Non-Cacheable Content",
    param: "",
    attack: "",
    name: "Storable but Non-Cacheable Content",
    risk: "Informational",
    id: "0",
    alertRef: "10049",
  },
  {
    sourceid: "3",
    other: "",
    method: "GET",
    evidence: "Feature-Policy",
    pluginId: "10063",
    cweid: "16",
    confidence: "Medium",
    wascid: "15",
    description: "The header has now been renamed to Permissions-Policy. ",
    messageId: "1",
    url: "http://localhost:3000/",
    reference:
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy",
    solution:
      "Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header instead of the Feature-Policy header.",
    alert: "Deprecated Feature Policy Header Set",
    param: "",
    attack: "",
    name: "Deprecated Feature Policy Header Set",
    risk: "Low",
    id: "1",
    alertRef: "10063",
  },
];
export const userRows = [
  {
    id: 1,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 2,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 3,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 4,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 5,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 6,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 7,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 8,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 9,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
  {
    id: 10,
    username: "Jon Snow",
    avatar:
      "https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500",
    email: "jon@gmail.com",
    status: "active",
    transaction: "$120.00",
  },
];

export const messages = [
  {
    id: 1,
    request: {
      method: "POST",
      uri: "POST /appsechq/auth",
      headers: {
        header1: "Content-Type: application/url-encoded",
      },
      body: "user=user123&password=pass123&csrf_token=token456",
    },
    response: {
      headers: { header1: "application/text" },
      statusCode: 200,
      body: "Authenticated successfully",
    },
  },
  {
    id: 2,
    request: {
      method: "GET",
      uri: "GET /appsechq/products/catalogue?id=45",
      headers: { header1: "Accept: application/json" },
      body: "",
    },
    response: {
      headers: {
        header1: "Content: application/json",
      },
      statusCode: 200,
      body: "[{product_id:223, product_name:Bajaj Microwave, description:Appliance to heat food items}, {product_id:223, product_name:Bosch Washing Machine, description:Top load washing machine}]",
    },
  },
];

export const johnMessages = [
  {
    id: 2,
    request: {
      method: "GET",
      uri: "GET /appsechq/john/search?item_id=222",
      headers: {
        header1: "Content-Type: application/json",
        header2:
          "token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJpZCI6MSwidXNlcm5hbWUiOiIiLCJlbWFpbCI6ImFkbWluQGp1aWNlLXNoLm9wIiwicGFzc3dvcmQiOiIwMTkyMDIzYTdiYmQ3MzI1MDUxNmYwNjlkZjE4YjUwMCIsInJvbGUiOiJhZG1pbiIsImRlbHV4ZVRva2VuIjoiIiwibGFzdExvZ2luSXAiOiIwLjAuMC4wIiwicHJvZmlsZUltYWdlIjoiYXNzZXRzL3B1YmxpYy9pbWFnZXMvdXBsb2Fkcy9kZWZhdWx0QWRtaW4ucG5nIiwidG90cFNlY3JldCI6IiIsImlzQWN0aXZlIjp0cnVlLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJkZWxldGVkQXQiOm51bGx9LCJpYXQiOjE2Mzg0MjY1NTksImV4cCI6MTYzODQ0NDU1OX0.eRvS1A64As5Kj_UJ95FvE8twjLf925fjVClW4cGC_8VmBXeZ9jdNTVgw4RFW1HGlwatBJwm9oYWUF4jAiUzInMRWDkHjlgSN8WmDSuAbyGmy3ibhDAfXqaOo5GglM9ca9K5Jpb9pI9al8TR8QNngmb3TMUtOBj3gp0f9P-NwVqk",
        header3:
          "cookie: language=en; continueCode=E3OzQenePWoj4zk293aRX8KbBNYEAo9GL5qO1ZDwp6JyVxgQMmrlv7npKLVy; welcomebanner_status=dismiss; cookieconsent_status=dismiss",
      },
      body: "",
    },
    response: {
      headers: { header1: "Content-Type: application/json" },
      statusCode: 200,
      body: "Search successful",
    },
  },
  {
    id: 3,
    request: {
      method: "POST",
      uri: "POST /appsechq/john/checkout?cart_id=8887",
      headers: {
        header1: "Content-Type: application/json",
        header2:
          "token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJpZCI6MSwidXNlcm5hbWUiOiIiLCJlbWFpbCI6ImFkbWluQGp1aWNlLXNoLm9wIiwicGFzc3dvcmQiOiIwMTkyMDIzYTdiYmQ3MzI1MDUxNmYwNjlkZjE4YjUwMCIsInJvbGUiOiJhZG1pbiIsImRlbHV4ZVRva2VuIjoiIiwibGFzdExvZ2luSXAiOiIwLjAuMC4wIiwicHJvZmlsZUltYWdlIjoiYXNzZXRzL3B1YmxpYy9pbWFnZXMvdXBsb2Fkcy9kZWZhdWx0QWRtaW4ucG5nIiwidG90cFNlY3JldCI6IiIsImlzQWN0aXZlIjp0cnVlLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJkZWxldGVkQXQiOm51bGx9LCJpYXQiOjE2Mzg0MjY1NTksImV4cCI6MTYzODQ0NDU1OX0.eRvS1A64As5Kj_UJ95FvE8twjLf925fjVClW4cGC_8VmBXeZ9jdNTVgw4RFW1HGlwatBJwm9oYWUF4jAiUzInMRWDkHjlgSN8WmDSuAbyGmy3ibhDAfXqaOo5GglM9ca9K5Jpb9pI9al8TR8QNngmb3TMUtOBj3gp0f9P-NwVqk",
        header3:
          "cookie: language=en; continueCode=E3OzQenePWoj4zk293aRX8KbBNYEAo9GL5qO1ZDwp6JyVxgQMmrlv7npKLVy; welcomebanner_status=dismiss; cookieconsent_status=dismiss",
      },
      body: "{itemId: 1, quantity : 2, amount: 500}",
    },
    response: {
      headers: { header1: "Content-Type: application/json" },
      statusCode: 200,
      body: "Checkout successful",
    },
  },
  {
    id: 4,
    request: {
      method: "POST",
      uri: "POST /appsechq/john/payment?gateway_id=666",
      headers: {
        header1: "Content-Type: application/json",
        header2:
          "token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJpZCI6MSwidXNlcm5hbWUiOiIiLCJlbWFpbCI6ImFkbWluQGp1aWNlLXNoLm9wIiwicGFzc3dvcmQiOiIwMTkyMDIzYTdiYmQ3MzI1MDUxNmYwNjlkZjE4YjUwMCIsInJvbGUiOiJhZG1pbiIsImRlbHV4ZVRva2VuIjoiIiwibGFzdExvZ2luSXAiOiIwLjAuMC4wIiwicHJvZmlsZUltYWdlIjoiYXNzZXRzL3B1YmxpYy9pbWFnZXMvdXBsb2Fkcy9kZWZhdWx0QWRtaW4ucG5nIiwidG90cFNlY3JldCI6IiIsImlzQWN0aXZlIjp0cnVlLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJkZWxldGVkQXQiOm51bGx9LCJpYXQiOjE2Mzg0MjY1NTksImV4cCI6MTYzODQ0NDU1OX0.eRvS1A64As5Kj_UJ95FvE8twjLf925fjVClW4cGC_8VmBXeZ9jdNTVgw4RFW1HGlwatBJwm9oYWUF4jAiUzInMRWDkHjlgSN8WmDSuAbyGmy3ibhDAfXqaOo5GglM9ca9K5Jpb9pI9al8TR8QNngmb3TMUtOBj3gp0f9P-NwVqk",
        header3:
          "cookie: language=en; continueCode=E3OzQenePWoj4zk293aRX8KbBNYEAo9GL5qO1ZDwp6JyVxgQMmrlv7npKLVy; welcomebanner_status=dismiss; cookieconsent_status=dismiss",
      },
      body: {
        username: "john@cymitra.com",
        cardToken: "XXXX-XXXX-1230",
      },
    },
    response: {
      headers: {
        header1: "Content-Type: application/json",
      },
      statusCode: 200,
      body: "{statusCd:1, msg:success, cardToken:1234-4567-1230, mobileNumber: 999999999}",
    },
  },
];

export const shashankMessages = [
  {
    id: 1,
    request: {
      method: "GET",
      uri: "GET appsechq/shashank/users",
      headers: {
        header1:
          "token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJpZCI6MSwidXNlcm5hbWUiOiIiLCJlbWFpbCI6ImFkbWluQGp1aWNlLXNoLm9wIiwicGFzc3dvcmQiOiIwMTkyMDIzYTdiYmQ3MzI1MDUxNmYwNjlkZjE4YjUwMCIsInJvbGUiOiJhZG1pbiIsImRlbHV4ZVRva2VuIjoiIiwibGFzdExvZ2luSXAiOiIwLjAuMC4wIiwicHJvZmlsZUltYWdlIjoiYXNzZXRzL3B1YmxpYy9pbWFnZXMvdXBsb2Fkcy9kZWZhdWx0QWRtaW4ucG5nIiwidG90cFNlY3JldCI6IiIsImlzQWN0aXZlIjp0cnVlLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJkZWxldGVkQXQiOm51bGx9LCJpYXQiOjE2Mzg0MjY1NTksImV4cCI6MTYzODQ0NDU1OX0.eRvS1A64As5Kj_UJ95FvE8twjLf925fjVClW4cGC_8VmBXeZ9jdNTVgw4RFW1HGlwatBJwm9oYWUF4jAiUzInMRWDkHjlgSN8WmDSuAbyGmy3ibhDAfXqaOo5GglM9ca9K5Jpb9pI9al8TR8QNngmb3TMUtOBj3gp0f9P-NwVqk",
        header2:
          "cookie: language=en; continueCode=E3OzQenePWoj4zk293aRX8KbBNYEAo9GL5qO1ZDwp6JyVxgQMmrlv7npKLVy; welcomebanner_status=dismiss; cookieconsent_status=dismiss",
      },
      body: "",
    },
    response: {
      headers: {
        header1: "Content-Type: application/json",
      },
      statusCode: 200,
      body: "[{username:adam@cymitra.com, password:xxxxx},{username:john@cymitra.com, password:xxxxxx},{username:shashank@cymitra.com, password:xxxxxx}]",
    },
  },
  {
    id: 2,
    request: {
      method: "GET",
      uri: "GET /appsechq/shashank/customers",
      headers: {
        header1:
          "token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJpZCI6MSwidXNlcm5hbWUiOiIiLCJlbWFpbCI6ImFkbWluQGp1aWNlLXNoLm9wIiwicGFzc3dvcmQiOiIwMTkyMDIzYTdiYmQ3MzI1MDUxNmYwNjlkZjE4YjUwMCIsInJvbGUiOiJhZG1pbiIsImRlbHV4ZVRva2VuIjoiIiwibGFzdExvZ2luSXAiOiIwLjAuMC4wIiwicHJvZmlsZUltYWdlIjoiYXNzZXRzL3B1YmxpYy9pbWFnZXMvdXBsb2Fkcy9kZWZhdWx0QWRtaW4ucG5nIiwidG90cFNlY3JldCI6IiIsImlzQWN0aXZlIjp0cnVlLCJjcmVhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJ1cGRhdGVkQXQiOiIyMDIxLTEyLTAxIDA2OjIxOjA3LjQ1OCArMDA6MDAiLCJkZWxldGVkQXQiOm51bGx9LCJpYXQiOjE2Mzg0MjY1NTksImV4cCI6MTYzODQ0NDU1OX0.eRvS1A64As5Kj_UJ95FvE8twjLf925fjVClW4cGC_8VmBXeZ9jdNTVgw4RFW1HGlwatBJwm9oYWUF4jAiUzInMRWDkHjlgSN8WmDSuAbyGmy3ibhDAfXqaOo5GglM9ca9K5Jpb9pI9al8TR8QNngmb3TMUtOBj3gp0f9P-NwVqk",
        header2:
          "cookie: language=en; continueCode=E3OzQenePWoj4zk293aRX8KbBNYEAo9GL5qO1ZDwp6JyVxgQMmrlv7npKLVy; welcomebanner_status=dismiss; cookieconsent_status=dismiss",
      },
      body: "",
    },
    response: {
      headers: {
        header1: "Content-Type: application/json",
      },
      statusCode: 200,
      body: "[{username:sai@customer.com, password:xxxxx, mobile:999999999},{username:rahul@customer.com, password:99999998}]",
    },
  },
];
